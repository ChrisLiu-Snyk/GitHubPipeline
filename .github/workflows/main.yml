name: Prebuilt repo + Snyk Security Scanning (OS, Code, Docker, IaC and Snyk Filter)

# Runs 4 Snyk Products (Code, Open Source, Container, IaC)
# Snyk installation via npm
# Node.js version: 18.4
# Outputs the results to HTML files/GitHub Artifact

# Prerequisites:
# - Set a SNYK_TOKEN in the pipelines secrets 
# (Repo Settings, Security, Secrets & Variables, Actions, Repo Secrets)

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js for installing Snyk 
      uses: actions/setup-node@v2
      with:
        node-version: 18.4

    # Install & prepare Snyk
    - run: npm install --location=global snyk

    # Authenticate Snyk      
    - run: snyk auth ${{ secrets.SNYK_TOKEN }}

    # Install & prepare Snyk-to-Html tool
    - name: install snyk-to-html
      run: npm i -g snyk-to-html  
               
    # Install Snyk Filter 
    - name: Install SNyk Filter
      run: npm i -g snyk-filter

    # Run Snyk OpenSource Test
    - name: Snyk OpenSource Test
      run: 
          snyk test --json-file-output=snykoss.json
      continue-on-error: true

    # Use Snyk to Html on json file
    - name: Snyk to HTML on OSS json file
      run: snyk-to-html -i snykoss.json -o SnykOSS.html
      
    # Run Snyk Filter Test (see .snyk-filter.snyk.yml for config)
    - name: Snyk filter test
      run: snyk-filter -i snykoss.json -json | snyk-to-html -o snykfilter.html 
      continue-on-error: true
    
    
 
    # Run Snyk Code Test
    - name: Snyk Code Scanning
      run: snyk code test --json | snyk-to-html -o snykcode.html 
      continue-on-error: true

    # Run Snyk IaC Test
    - name: Snyk Infrastructure-as-Code Scanning
      run: snyk iac test --json | snyk-to-html -o snykiac.html
      continue-on-error: true
    
    # Build the container to test and Tag with meaningful name
    - name: Build the Docker Image
      run: docker build . --file Dockerfile --tag sladey01/ghpipeline:latest

    # Run Snyk Container Test specifying the tagged container image built in previous step
    - name: Snyk Container Scanning
      run: snyk container test docker.io/sladey01/ghpipeline:latest -json | snyk-to-html -o snykcont.html      
      continue-on-error: true

    #Collect all the generated html files and upload to a GitHub Artifact
    - name: Use the Upload Artifact GitHub Action
      uses: actions/upload-artifact@v4
      with:
          name: results
          path: ./*.html   
